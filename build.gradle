/*
 * This file was generated by the Gradle 'init' task.
 */
buildscript {
    repositories {
//        mavenLocal()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "gradle.plugin.com.github.viswaramamoorthy:gradle-util-plugins:0.1.0-RELEASE"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.6"
        classpath "fr.brouillard.oss.gradle:gradle-jgitver-plugin:0.9.1"
        classpath 'net.linguica.gradle:maven-settings-plugin:0.5'
    }
}

plugins {
	id 'org.springframework.boot' version '2.4.8'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'maven-publish'
}

apply plugin: 'net.linguica.maven-settings'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'eclipse'
apply plugin: 'fr.brouillard.oss.gradle.jgitver'

bootRun {
	//jvmArgs = ['-Djavax.net.debug=all']
	main = 'com.dozi.zoominfo.Application'
}

repositories {
    maven {
        url = uri('https://repo.maven.apache.org/maven2')
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'com.google.cloud.sql:cloud-sql-connector-r2dbc-mysql:1.3.1'

    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-spring-webflux:3.0.0'

    implementation 'org.projectlombok:lombok:1.18.16'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'

	runtimeOnly 'dev.miku:r2dbc-mysql:0.8.2.RELEASE'
}

test.outputs.upToDateWhen {false}

test{
    useJUnitPlatform()

    afterTest { desc, result ->
        def output = "Class name: ${desc.className}, Test name: ${desc.name},  (Test status: ${result.resultType})"
        println( '\n' + output)
    }
}

group = 'com.dozi.zoominfo'
description = 'ReactCloudSQL'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

